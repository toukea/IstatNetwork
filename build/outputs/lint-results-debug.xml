<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 25.2.2">

    <issue
        id="MissingPermission"
        severity="Error"
        message="Missing permissions required by WifiManager.getConnectionInfo: android.permission.ACCESS_WIFI_STATE"
        category="Correctness"
        priority="9"
        summary="Missing Permissions"
        explanation="This check scans through your code and libraries and looks at the APIs being used, and checks this against the set of permissions required to access those APIs. If the code using those APIs is called at runtime, then the program will crash.

Furthermore, for permissions that are revocable (with targetSdkVersion 23), client code must also be prepared to handle the calls throwing an exception if the user rejects the request for permission at runtime."
        errorLine1="   WifiInfo wifiInfo = manager.getConnectionInfo();"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/home/istat/Veone/MtnDriveTest/istatNetwork_v2/src/istat/android/network/util/Connectivity.java"
            line="148"
            column="24"/>
    </issue>

    <issue
        id="OldTargetApi"
        severity="Warning"
        message="Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the `android.os.Build.VERSION_CODES` javadoc for details."
        category="Correctness"
        priority="6"
        summary="Target SDK attribute is not targeting latest version"
        explanation="When your application runs on a version of Android that is more recent than your `targetSdkVersion` specifies that it has been tested with, various compatibility modes kick in. This ensures that your application continues to work, but it may look out of place. For example, if the `targetSdkVersion` is less than 14, your app may get an option button in the UI.

To fix this issue, set the `targetSdkVersion` to the highest available value. Then test your app to make sure everything works correctly. You may want to consult the compatibility notes to see what changes apply to each version you are adding support for: http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        url="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        urls="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        errorLine1="        android:targetSdkVersion=&quot;18&quot; />"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/home/istat/Veone/MtnDriveTest/istatNetwork_v2/AndroidManifest.xml"
            line="8"
            column="9"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 35 (RestConnect getRestConnectFromQuery)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="  Log.i(&quot;RestConnect getRestConnectFromQuery&quot;, &quot;send Query&quot;);"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/istat/Veone/MtnDriveTest/istatNetwork_v2/src/istat/android/network/util/SocketQuery.java"
            line="42"
            column="3"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 35 (RestConnect getRestConnectFromQuery)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="  Log.i(&quot;RestConnect getRestConnectFromQuery&quot;, &quot;wait for respons&quot;);"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/istat/Veone/MtnDriveTest/istatNetwork_v2/src/istat/android/network/util/SocketQuery.java"
            line="44"
            column="3"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 35 (RestConnect getRestConnectFromQuery)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="  Log.i(&quot;RestConnect getRestConnectFromQuery&quot;, &quot;send Query&quot;);"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/istat/Veone/MtnDriveTest/istatNetwork_v2/src/istat/android/network/util/SocketQuery.java"
            line="56"
            column="3"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 35 (RestConnect getRestConnectFromQuery)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="  Log.i(&quot;RestConnect getRestConnectFromQuery&quot;, &quot;wait for respons&quot;);"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/istat/Veone/MtnDriveTest/istatNetwork_v2/src/istat/android/network/util/SocketQuery.java"
            line="58"
            column="3"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 35 (RestConnect getRestConnectFromQuery)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="   Log.i(&quot;RestConnect getRestConnectFromQuery&quot;, &quot;Fatal error: &quot; + e);"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/istat/Veone/MtnDriveTest/istatNetwork_v2/src/istat/android/network/util/SocketQuery.java"
            line="73"
            column="4"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 35 (RestConnect getRestConnectFromQuery)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="   Log.i(&quot;RestConnect getRestConnectFromQuery&quot;, &quot;Input close error: &quot;"
        errorLine2="   ^">
        <location
            file="/home/istat/Veone/MtnDriveTest/istatNetwork_v2/src/istat/android/network/util/SocketQuery.java"
            line="78"
            column="4"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 35 (RestConnect getRestConnectFromQuery)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="  Log.i(&quot;RestConnect getRestConnectFromQuery&quot;, &quot;send Query&quot;);"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/istat/Veone/MtnDriveTest/istatNetwork_v2/src/istat/android/network/util/SocketQuery.java"
            line="81"
            column="3"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 35 (RestConnect getRestConnectFromQuery)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="  Log.i(&quot;RestConnect getRestConnectFromQuery&quot;, &quot;wait for respons&quot;);"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/istat/Veone/MtnDriveTest/istatNetwork_v2/src/istat/android/network/util/SocketQuery.java"
            line="83"
            column="3"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 35 (RestConnect getRestConnectFromQuery)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="   Log.i(&quot;RestConnect getRestConnectFromQuery&quot;, &quot;Fatal error: &quot; + e);"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/istat/Veone/MtnDriveTest/istatNetwork_v2/src/istat/android/network/util/SocketQuery.java"
            line="98"
            column="4"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 35 (RestConnect getRestConnectFromQuery)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="   Log.i(&quot;RestConnect getRestConnectFromQuery&quot;, &quot;Input close error: &quot;"
        errorLine2="   ^">
        <location
            file="/home/istat/Veone/MtnDriveTest/istatNetwork_v2/src/istat/android/network/util/SocketQuery.java"
            line="103"
            column="4"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 35 (RestConnect getRestConnectFromQuery)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="  Log.i(&quot;RestConnect getRestConnectFromQuery&quot;, &quot;send Query&quot;);"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/istat/Veone/MtnDriveTest/istatNetwork_v2/src/istat/android/network/util/SocketQuery.java"
            line="106"
            column="3"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 35 (RestConnect getRestConnectFromQuery)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="  Log.i(&quot;RestConnect getRestConnectFromQuery&quot;, &quot;wait for respons&quot;);"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/istat/Veone/MtnDriveTest/istatNetwork_v2/src/istat/android/network/util/SocketQuery.java"
            line="108"
            column="3"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 35 (RestConnect getRestConnectFromQuery)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="   Log.i(&quot;RestConnect getRestConnectFromQuery&quot;, &quot;Fatal error: &quot; + e);"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/istat/Veone/MtnDriveTest/istatNetwork_v2/src/istat/android/network/util/SocketQuery.java"
            line="123"
            column="4"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 35 (RestConnect getRestConnectFromQuery)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="   Log.i(&quot;RestConnect getRestConnectFromQuery&quot;, &quot;Input close error: &quot;"
        errorLine2="   ^">
        <location
            file="/home/istat/Veone/MtnDriveTest/istatNetwork_v2/src/istat/android/network/util/SocketQuery.java"
            line="128"
            column="4"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 35 (RestConnect getRestConnectFromQuery)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="  Log.i(&quot;RestConnect getRestConnectFromQuery&quot;, &quot;send Query&quot;);"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/istat/Veone/MtnDriveTest/istatNetwork_v2/src/istat/android/network/util/SocketQuery.java"
            line="131"
            column="3"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 35 (RestConnect getRestConnectFromQuery)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="  Log.i(&quot;RestConnect getRestConnectFromQuery&quot;, &quot;wait for respons&quot;);"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/istat/Veone/MtnDriveTest/istatNetwork_v2/src/istat/android/network/util/SocketQuery.java"
            line="133"
            column="3"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="Old buildToolsVersion 21.1.1; recommended version is 21.1.2 or later"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    buildToolsVersion &quot;21.1.1&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/home/istat/Veone/MtnDriveTest/istatNetwork_v2/build.gradle"
            line="9"
            column="5"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_launcher` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="/home/istat/Veone/MtnDriveTest/istatNetwork_v2/res/drawable-mdpi/ic_launcher.png"/>
        <location
            file="/home/istat/Veone/MtnDriveTest/istatNetwork_v2/res/drawable-xhdpi/ic_launcher.png"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in `drawable-hdpi`: ic_launcher.png (found in drawable-mdpi, drawable-xhdpi)"
        category="Usability:Icons"
        priority="4"
        summary="Icon densities validation"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.

Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/istat/Veone/MtnDriveTest/istatNetwork_v2/res/drawable-hdpi"/>
    </issue>

    <issue
        id="IconMissingDensityFolder"
        severity="Warning"
        message="Missing density variation folders in `res`: drawable-xxhdpi, drawable-xxxhdpi"
        category="Usability:Icons"
        priority="3"
        summary="Missing density folder"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra-high, extra-extra-high). This lint check identifies folders which are missing, such as `drawable-hdpi`.

Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/istat/Veone/MtnDriveTest/istatNetwork_v2/res"/>
    </issue>

</issues>
